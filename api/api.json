{
    "name": "Quality",
    "description": "Application to track perfect day and quality at gilt",
    "base_url": "http://localhost:9000",

    "models": {

	"healthcheck": {
	    "fields": [
                { "name": "status", "type": "string", "example": "healthy" }
	    ]
	},

        "team": {
            "description": "A team is the main actor in the system. Teams have a unique key and own incidents",
            "fields": [
                { "name": "key", "type": "string", "description": "Unique identifier for this team" }
            ]
        },

        "incident": {
            "description": "A bug or error that affected public or internal users in a negative way",
            "fields": [
                { "name": "id", "type": "long", "description": "Internal unique identifier for this incident." },
                { "name": "summary", "type": "string", "description": "Summary of the incident." },
                { "name": "description", "type": "string", "description": "Full description of the incident", "required": false },
                { "name": "team_key", "type": "string", "description": "Team responsible for resolution of this incident. Must be in lower case." },
                { "name": "severity", "type": "string", "values": ["low", "high"] },
		{ "name": "tags", "type": "[string]", "required": false, "description": "Optional list of tags to apply to this incident" }
            ]
        },

        "report": {
            "description": "Details for how an incident will be resolved",
            "fields": [
                { "name": "id", "type": "long", "description": "Internal unique identifier for this incident." },
                { "name": "incident", "type": "incident" },
                { "name": "body", "type": "string", "description": "Full description of the incident" },
                { "name": "grade", "type": "integer", "required": false, "minimum": 0, "maximum": 100, "description": "Grade given to this report on a scale of 0 (bad) to 100 (good)" }
            ]
        },

        "error": {
            "fields": [
                { "name": "code", "type": "string", "description": "Machine readable code for this specific error message" },
                { "name": "message", "type": "string", "description": "Description of the error" }
            ]
        }

    },

    "resources": {

	"healthcheck": {
	    "path": "/_internal_/healthcheck",
            "operations": [
                {
                    "method": "GET",
                    "responses": {
                        "200": { "type": "[healthcheck]" }
                    }
                }
	    ]
	},

	"team": {
	    "operations": [
		{
		    "method": "GET",
		    "description": "Search all teams. Results are always paginated.",
                    "parameters": [
                        { "name": "key", "type": "string", "description": "Find team with this key. Exact match", "required": false },
                        { "name": "limit", "type": "integer", "default": 25, "description": "The number of records to return", "minimum": 0, "maximum": 100 },
                        { "name": "offset", "type": "integer", "default": 0, "description": "Used to paginate. First page of results is 0.", "minimum": 0 }
                    ],
                    "responses": {
                        "200": { "type": "[team]" }
                    }
                },

                {
                    "method": "GET",
                    "description": "Returns information about the team with this specific key.",
                    "path": "/:key",
                    "responses": {
                        "200": { "type": "team" }
                    }
                },

                {
                    "method": "POST",
                    "description": "Create a new team.",
                    "parameters": [
			{ "name": "key", "type": "string" }
		    ],
                    "responses": {
                        "201": { "type": "team" },
                        "409": { "type": "[error]" }
                    }
                },

		{
		    "method": "DELETE",
                    "path": "/:key"
		}
	    ]
	},

        "incident": {

            "operations": [
                {
                    "method": "GET",
                    "description": "Search all incidents. Results are always paginated.",
                    "parameters": [
                        { "name": "id", "type": "long", "description": "Find incident with this id. Exact match", "required": false },
                        { "name": "team_key", "type": "string", "description": "Find incidents for which this team is responsible. Exact match", "required": false },
                        { "name": "limit", "type": "integer", "default": 25, "description": "The number of records to return", "minimum": 0, "maximum": 100 },
                        { "name": "offset", "type": "integer", "default": 0, "description": "Used to paginate. First page of results is 0.", "minimum": 0 }
                    ],
                    "responses": {
                        "200": { "type": "[incident]" }
                    }
                },

                {
                    "method": "GET",
                    "description": "Returns information about the incident with this specific id.",
                    "path": "/:id",
                    "responses": {
                        "200": { "type": "incident" }
                    }
                },

                {
                    "method": "POST",
                    "description": "Create a new incident.",
                    "parameters": [
			{ "name": "team_key", "type": "string", "description": "Team responsible for resolution of this incident" },
			{ "name": "severity", "type": "string", "example": "low or high" },
			{ "name": "summary", "type": "string", "description": "Summary of the incident." },
			{ "name": "description", "type": "string", "description": "Full description of the incident", "required": false },
			{ "name": "tags", "type": "[string]", "description": "Optional list of tags to apply to this incident", "required": false }
		    ],
                    "responses": {
                        "201": { "type": "incident" },
                        "409": { "type": "[error]" }
                    }
                },

                {
                    "method": "PUT",
		    "path": "/:id",
                    "description": "Updates an incident.",
                    "parameters": [
			{ "name": "team_key", "type": "string", "description": "Team responsible for resolution of this incident" },
			{ "name": "severity", "type": "string", "example": "low or high" },
			{ "name": "summary", "type": "string", "description": "Summary of the incident." },
			{ "name": "description", "type": "string", "description": "Full description of the incident", "required": false },
			{ "name": "tags", "type": "[string]", "description": "Optional list of tags to apply to this incident", "required": false }
		    ],
                    "responses": {
                        "201": { "type": "incident" },
                        "409": { "type": "[error]" }
                    }
                },

		{
		    "method": "DELETE",
                    "path": "/:id"
		}

            ]
        },

	"report": {
	    "operations": [
		{
		    "method": "GET",
                    "description": "Search all reports. Results are always paginated.",
                    "parameters": [
                        { "name": "id", "type": "long", "description": "Find report with this id. Exact match", "required": false },
                        { "name": "incident_id", "type": "long", "description": "Find report for this incident_id", "required": false },
                        { "name": "limit", "type": "integer", "default": 25, "description": "The number of records to return", "minimum": 0, "maximum": 100 },
                        { "name": "offset", "type": "integer", "default": 0, "description": "Used to paginate. First page of results is 0.", "minimum": 0 }
                    ],
                    "responses": {
                        "200": { "type": "[report]" }
                    }
                },

		{
		    "method": "POST",
                    "description": "Create a report.",
                    "parameters": [
                        { "name": "incident", "type": "incident" },
                        { "name": "body", "type": "string" },
                        { "name": "grade", "type": "integer", "required": false }
                    ],
                    "responses": {
                        "200": { "type": "report" }
                    }
                },

		{
		    "method": "PUT",
                    "description": "Update a report.",
		    "path": "/:id",
                    "parameters": [
                        { "name": "incident", "type": "incident" },
                        { "name": "body", "type": "string" },
                        { "name": "grade", "type": "integer", "required": false }
                    ],
                    "responses": {
                        "200": { "type": "report" }
                    }
                },

		{
		    "method": "GET",
                    "description": "Get a single report.",
                    "path": "/:id",
                    "responses": {
                        "200": { "type": "report" }
                    }
                },

		{
		    "method": "DELETE",
                    "description": "Delete a report.",
                    "path": "/:id"
                }

	    ]
	}

    }
}
