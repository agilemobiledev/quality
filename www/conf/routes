GET     /_internal_/healthcheck                                   controllers.Healthchecks.index()

GET     /                                                         controllers.Dashboard.index(page: Int ?= 0)

GET     /incidents/                                               controllers.Incidents.index(team_key: Option[String] ?= None, has_team: Option[String] ?= None, has_plan: Option[String] ?= None, has_grade: Option[String] ?= None, page: Int ?= 0)
GET     /incidents/create                                         controllers.Incidents.create(teamKey: Option[String] ?= None)
POST    /incidents/postCreate                                     controllers.Incidents.postCreate()
GET     /incidents/edit                                           controllers.Incidents.edit(id: Long)
POST    /incidents/postEdit                                       controllers.Incidents.postEdit(id: Long)
POST    /incidents/delete/:id                                     controllers.Incidents.postDeleteById(id: Long)
GET     /incidents/:id                                            controllers.Incidents.show(id: Long)

GET     /plans/:id                                                controllers.Plans.getById(id: Long)
GET     /plans/uploadByIncidentId/:incident_id                    controllers.Plans.uploadByIncidentId(incident_id: Long)
POST    /plans/uploadByIncidentId/:incident_id                    controllers.Plans.postUploadByIncidentId(incident_id: Long)
POST    /plans/deleteById/:id                                     controllers.Plans.postDeleteById(id: Long, incident_id: Long)
POST    /plans/grade/:id                                          controllers.Plans.postGrade(id: Long, score: Int)

GET     /teams/                                                   controllers.Teams.index(key: Option[String] ?= None, page: Int ?= 0)
GET     /teams/create                                             controllers.Teams.create()
POST    /teams/postCreate                                         controllers.Teams.postCreate()
GET     /teams/:key                                               controllers.Teams.show(key: String, incidentsPage: Int ?= 0)
POST    /teams/delete/:key                                        controllers.Teams.postDeleteByKey(key: String)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                                             controllers.Assets.at(path="/public", file)

